apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"

/**
 * Change variable "server_ip" in local.properties to assign the host of server
 * @return
 */
def getUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("server_ip");
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        applicationId "com.example.fantasyclient"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        //use JUnit 4 as default instrumented tester
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //get server_ip as String
        resValue "string", "SERVER_IP", "\""+getUrl()+"\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        //solve Error: "Method ... not mocked"
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    /**
     * Location dependencies
     */
    implementation 'com.github.delight-im:Android-SimpleLocation:v1.1.0'

    /**
     * Jackson object mapper dependencies
     */
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'

    def nav_version = "2.3.0-beta01"

    /**
     * Local unit test dependencies
     */
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.2.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'
    // Using JUnit 4 with androidx
    testImplementation 'androidx.test.ext:junit:1.1.1'
    // Robolectric version 4.3.1 support API level 29
    testImplementation "org.robolectric:robolectric:4.3.1"

    /**
     * Instrumented unit test dependencies
     */
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    // Using JUnit 4 with androidx
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    /**
     * Navigation dependencies
     */
    // Java language implementation
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}
